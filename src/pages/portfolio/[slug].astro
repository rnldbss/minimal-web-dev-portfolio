---
import Layout from "../../layouts/Layout.astro";
import type { SanityDocument } from "@sanity/client";
import { loadQuery } from "../../sanity/lib/load-query";
import MyPortableText from "../../components/portable-text/MyPortableText.astro";
import { urlFor } from "../../sanity/lib/image";
import { generateTOC } from "../../js/toc"; // Import TOC utility
import TwoItemsList from "../../components/TwoItemsList.astro";
import AllProjectsList from "../../components/AllProjectsList.astro";
// GROQ Query
export async function getStaticPaths() {
  const { data: projects } = await loadQuery<SanityDocument[]>({
    query: `*[_type == "project"]`,
  });

  return projects.map(({ slug }) => ({
    params: { slug: slug.current },
  }));
}

const { params } = Astro;

// Fetch Project Data
const { data: project } = await loadQuery({
  query: `*[_type == "project" && slug.current == $slug][0]`,
  params,
});

// Fetch all projects for listing
const { data: allProjects } = await loadQuery<SanityDocument[]>({
  query: `*[_type == "project"]`,
});

// Generate TOC from `project.body`
const toc = generateTOC(project.body);
console.log(project.projectOverview.techStack);
---

<Layout>
  <section>
    <!-- Image Section -->
    <div class="pt-14 min-h-screen">
      <img
        class="max-h-[45vh] w-full object-cover"
        src={urlFor(project.mainImage)}
        alt={project.title}
      />

      <!-- Header Section -->
      <div class="pt-4">
        <div>
          <h1 class="text-2xl text-body-lighter">{project.tagLine}</h1>
          <h2 class="text-8xl pt-4">{project.title}</h2>
        </div>
        <div class="flex justify-between pt-8">
          <div class="w-1/2">
            <MyPortableText content={project.projectOverview?.body} />
          </div>
          <div class="w-1/2 mt-auto">
            <TwoItemsList listItems={project.projectOverview.techStack} />
          </div>
        </div>
      </div>
    </div>
    <div class="flex">
      <div class="max-w-[50em]">
        <MyPortableText content={project.body} />
      </div><aside>
        <nav>
          <h2>Table of Contents</h2>
          <ul>
            {
              toc.map(({ text, id }) => (
                <li>
                  <a href={`#${id}`}>{text}</a>
                </li>
              ))
            }
          </ul>
        </nav>
      </aside>
    </div>
  </section>
  <section>
    <h2 class="text-4xl">All Projects</h2>
    <AllProjectsList listItems={allProjects} />
  </section>
</Layout>
