---
// Props interface for component
interface Props {
  className?: string;
}

const { className = "" } = Astro.props;

// Animation delays for sun rays (in milliseconds)
const sunRayDelays = [480, 400, 320, 240, 200, 280, 360, 440];

// Sun ray positions [cx, cy]
const sunRayPositions = [
  [23, 12],
  [20.142, 20.142],
  [12, 23],
  [3.858, 20.142],
  [1, 12],
  [3.858, 3.858],
  [12, 1],
  [20.142, 3.858]
];
---

<!-- Theme toggle button with accessibility label -->
<button 
  id="theme-toggle" 
  class={`theme-toggle-button ${className}`}
  aria-label="Toggle theme"
>
  <!-- Sun icon (light mode) -->
  <svg
    id="sun-icon"
    width="1rem"
    height="1rem"
    viewBox="0 0 24 24"
    class="theme-toggle-icon fill-on-level-0"
    style="transform: rotate(0deg); transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);"
  >
    <!-- Animated sun rays -->
    <g mask="url(#sun-dots-mask)">
      {sunRayPositions.map(([cx, cy], index) => (
        <circle
          cx={cx}
          cy={cy}
          r="1.5"
          fill="on-level-0 dark:on-level-0-dark"
          class="theme-toggle-sun-dot"
          style={`transform-origin: center; transform: scale(0); --enter-animation-delay: ${sunRayDelays[index]}ms;`}
        />
      ))}
    </g>
    <!-- Sun center -->
    <circle
      cx="12"
      cy="12"
      r="7.5"
      fill="on-level-0 dark:on-level-0-dark"
      stroke="on-level-0 dark:on-level-0-dark"
    />
  </svg>

  <!-- Moon icon (dark mode) -->
  <svg
    id="moon-icon"
    xmlns="http://www.w3.org/2000/svg"
    width="0.8rem"
    height="0.8rem"
    viewBox="0 0 81.289 81.289"
    class="theme-toggle-icon animate-moon-fade-in fill-on-level-0-dark"
    style="display: none;"
  >
    <path d="M79.248,38.668c-1.246-0.464-2.669-0.088-3.518,0.95c-4.791,5.84-11.858,9.192-19.403,9.192c-13.833,0-25.083-11.255-25.083-25.083c0-6.963,2.808-13.441,7.908-18.242c0.977-0.918,1.26-2.357,0.705-3.579c-0.552-1.222-1.818-1.959-3.157-1.826C15.778,2.112,0,19.511,0,40.555c0,22.424,18.245,40.669,40.672,40.669c22.16,0,40.002-17.363,40.616-39.528C81.324,40.355,80.508,39.136,79.248,38.668z M40.671,74.953c-18.971,0-34.402-15.43-34.402-34.4c0-14.93,9.389-27.69,22.859-32.43c-2.714,4.689-4.156,10.022-4.156,15.605c0,17.292,14.065,31.355,31.357,31.355c6.317,0,12.373-1.882,17.479-5.322C69.82,64.399,56.557,74.953,40.671,74.953z"/>
  </svg>
</button>

<style>
  /* Theme toggle button container */
  .theme-toggle-button {
    position: relative;
    display: flex;
    align-items: center;
    justify-content: center;
    width: 32px;
    height: 32px;
    border: none;
    background: transparent;
    cursor: pointer;
    outline-offset: 2px;
    transition: background 0.25s, color 0.25s;
    fill: transparent;
  }

  /* Theme toggle icon base styles */
  .theme-toggle-icon {
    overflow: visible;
    stroke-width: 2px;
  }

  /* Sun ray animation */
  .theme-toggle-sun-dot {
    transform: scale(0);
    transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    animation: sun-dot-pop 0.5s cubic-bezier(0.07, 0.7, 0.35, 1.35) forwards;
    animation-delay: var(--enter-animation-delay);
  }

  @keyframes sun-dot-pop {
    from { transform: scale(0); }
    to { transform: scale(1); }
  }

  /* Moon fade animation */
  @keyframes moon-fade-in {
    from {
      opacity: 0;
      transform: rotate(80deg);
    }
    to {
      opacity: 1;
      transform: rotate(0deg);
    }
  }

  .animate-moon-fade-in {
    animation: moon-fade-in 0.5s cubic-bezier(0.4, 0, 0.2, 1);
  }

  /* Accessibility: Reduce motion */
  @media (prefers-reduced-motion: reduce) {
    .theme-toggle-icon,
    .theme-toggle-sun-dot {
      transition: none;
      animation: none;
    }
  }
</style>

<script is:inline>
  // Theme toggle functionality
  const button = document.getElementById("theme-toggle");
  const sunIcon = document.getElementById("sun-icon");
  const moonIcon = document.getElementById("moon-icon");

  // Set initial icon states based on current theme
  const isDark = document.documentElement.classList.contains('dark');
  sunIcon.style.display = isDark ? "none" : "block";
  moonIcon.style.display = isDark ? "block" : "none";

  // Handle theme toggle click
  button.addEventListener("click", () => {
    const isDark = document.documentElement.classList.toggle("dark");
    localStorage.theme = isDark ? "dark" : "light";

    // Toggle icon visibility
    sunIcon.style.display = isDark ? "none" : "block";
    moonIcon.style.display = isDark ? "block" : "none";
  });

  // Listen for system theme changes
  window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', (e) => {
    if (!('theme' in localStorage)) {
      const isDark = e.matches;
      document.documentElement.classList.toggle("dark", isDark);
      sunIcon.style.display = isDark ? "none" : "block";
      moonIcon.style.display = isDark ? "block" : "none";
    }
  });
</script> 